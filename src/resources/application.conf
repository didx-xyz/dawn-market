signal-conf {
  signal-url = "https://patrol.dawn.dev.didxtech.com"
  signal-user = "D@WNPatrol"
  signal-phone = "+27659747833"
  signal-timeout = 5
}

app-conf {
  controller-did="did:web:didx1.dawnpatrol.io"
  redis-url = "http://13.244.55.248:9980"
  redis-timeout = 5
  ipfs-cluster-url = "http://13.244.55.248:9983"
  universal-resolver-url = "https://dev.uniresolver.io/1.0/identifiers"
  universal-resolver-timeout = 5
  ipfs-cluster-timeout = 5
  polling-interval = 30
  prism-url = "http://13.244.55.248:8080/prism-agent"
  prism-token = "kxr9i@6XgKBUxe%O"
  dawn-url = "https://google.com"
  dawn-controller-did = "did:example:123456789"
  dawn-service-urls= ["http://13.244.55.248:9984/dawn-service"]
  dawn-welcome-message = "Welcome to D@wnPatrol\nAttached is a DID-card you can add to your Apple wallet. \nIf you have an Android phone consider using https://play.google.com/store/apps/details?id=color.dev.com.tangerine to import into your preferred wallet \nFeel free to use me as your personal assistant ;)"
  protocols-enabled = ["purchase-proto"] #"service-proto", "delivery-proto"]
}

purchase-proto {
  places = ["start", "shopping-cart", "payment", "delivery", "end"]
  transitions = ["order", "checkout", "deliver","done"]

  start = { place = "start", weight = 2, initial-params = ["did","location"]}
  end = "end"
  weights = [
  {start = "start", transition = "order", end = "shopping-cart", action = "create-order", action-params = ["order-date", "order-id", "order-name", "order-description", "order-amount"]},
  {start = "shopping-cart", transition = "order", end = "shopping-cart", action = "create-order", action-params = ["order-date", "order-id", "order-name", "order-description", "order-amount", "checkout"]},
  {start = "shopping-cart", transition = "checkout", end = "payment", action = "pay-order", action-params = ["order-id", "order-description", "order-amount"]},
  {start = "payment", transition = "deliver", end = "delivery", action = "receive-order", action-params = ["order-id", "location"]},
  {start = "delivery", transition = "done", end = "end", action = "complete-order", action-params = ["order-id", "order-amount"]},
  ]
}

registry-conf {
  registrar-url = "https://api.godiddy.com/0.1.0/universal-registrar/"
  api-key = "c2850992-32fd-4ccf-9352-77aa329eef13"
  registrar-timeout = 5
  did-method = "indy"
}

openai-conf {
  open-api-uri = "https://api.openai.com/v1"
  api-key = ${?OPENAI_TOKEN}
  org-id = "org-uqv6aepzPPw7Nf7Sayno6Sgk"

#  timeouts {
#      requestTimeoutSec = 200
#      readTimeoutSec = 200
#        connectTimeoutSec = 5
#        pooledConnectionIdleTimeoutSec = 60
#  }
}

passkit-conf {
  keystore-path ="/Users/ian/dev/gleibnif/modules/client/src/main/resources/credentials/didx1.p12"
  keystore-password ="amad3usM02art"
  apple-wwdrca = "/Users/ian/dev/gleibnif/modules/client/src/main/resources/credentials/pass-8.cer"
  template-path = "/Users/ian/dev/gleibnif/modules/client/src/main/resources/template"
  #grpc.host=grpc.pub1.passkit.io
  #grpc.port=443
  #credentials.certificate=src/main/resources/credentials/certificate.pem
  #credentials.key=src/main/resources/credentials/key-java.pem
  #credentials.chain=src/main/resources/credentials/ca-chain.pem
  #credentials.password="amad3usM02art"
  # Number of seconds to allow for checking of the generated assets before they are deleted. Set to -1 to not delete assets.
  #delete.assets.timeout.seconds=60
}